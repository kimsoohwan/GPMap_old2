#ifndef _GPMAP_COLOR_HPP_
#define _GPMAP_COLOR_HPP_

namespace GPMap {

const unsigned int NUM_COLORS		= 100;

const float COLOR_MAP_JET[NUM_COLORS][3] = {
{	0	,	0	,	0.52	,	}	,
{	0	,	0	,	0.56	,	}	,
{	0	,	0	,	0.6	,	}	,
{	0	,	0	,	0.64	,	}	,
{	0	,	0	,	0.68	,	}	,
{	0	,	0	,	0.72	,	}	,
{	0	,	0	,	0.76	,	}	,
{	0	,	0	,	0.8	,	}	,
{	0	,	0	,	0.84	,	}	,
{	0	,	0	,	0.88	,	}	,
{	0	,	0	,	0.92	,	}	,
{	0	,	0	,	0.96	,	}	,
{	0	,	0	,	1	,	}	,
{	0	,	0.04	,	1	,	}	,
{	0	,	0.08	,	1	,	}	,
{	0	,	0.12	,	1	,	}	,
{	0	,	0.16	,	1	,	}	,
{	0	,	0.2	,	1	,	}	,
{	0	,	0.24	,	1	,	}	,
{	0	,	0.28	,	1	,	}	,
{	0	,	0.32	,	1	,	}	,
{	0	,	0.36	,	1	,	}	,
{	0	,	0.4	,	1	,	}	,
{	0	,	0.44	,	1	,	}	,
{	0	,	0.48	,	1	,	}	,
{	0	,	0.52	,	1	,	}	,
{	0	,	0.56	,	1	,	}	,
{	0	,	0.6	,	1	,	}	,
{	0	,	0.64	,	1	,	}	,
{	0	,	0.68	,	1	,	}	,
{	0	,	0.72	,	1	,	}	,
{	0	,	0.76	,	1	,	}	,
{	0	,	0.8	,	1	,	}	,
{	0	,	0.84	,	1	,	}	,
{	0	,	0.88	,	1	,	}	,
{	0	,	0.92	,	1	,	}	,
{	0	,	0.96	,	1	,	}	,
{	0	,	1	,	1	,	}	,
{	0.04	,	1	,	0.96	,	}	,
{	0.08	,	1	,	0.92	,	}	,
{	0.12	,	1	,	0.88	,	}	,
{	0.16	,	1	,	0.84	,	}	,
{	0.2	,	1	,	0.8	,	}	,
{	0.24	,	1	,	0.76	,	}	,
{	0.28	,	1	,	0.72	,	}	,
{	0.32	,	1	,	0.68	,	}	,
{	0.36	,	1	,	0.64	,	}	,
{	0.4	,	1	,	0.6	,	}	,
{	0.44	,	1	,	0.56	,	}	,
{	0.48	,	1	,	0.52	,	}	,
{	0.52	,	1	,	0.48	,	}	,
{	0.56	,	1	,	0.44	,	}	,
{	0.6	,	1	,	0.4	,	}	,
{	0.64	,	1	,	0.36	,	}	,
{	0.68	,	1	,	0.32	,	}	,
{	0.72	,	1	,	0.28	,	}	,
{	0.76	,	1	,	0.24	,	}	,
{	0.8	,	1	,	0.2	,	}	,
{	0.84	,	1	,	0.16	,	}	,
{	0.88	,	1	,	0.12	,	}	,
{	0.92	,	1	,	0.08	,	}	,
{	0.96	,	1	,	0.04	,	}	,
{	1	,	1	,	0	,	}	,
{	1	,	0.96	,	0	,	}	,
{	1	,	0.92	,	0	,	}	,
{	1	,	0.88	,	0	,	}	,
{	1	,	0.84	,	0	,	}	,
{	1	,	0.8	,	0	,	}	,
{	1	,	0.76	,	0	,	}	,
{	1	,	0.72	,	0	,	}	,
{	1	,	0.68	,	0	,	}	,
{	1	,	0.64	,	0	,	}	,
{	1	,	0.6	,	0	,	}	,
{	1	,	0.56	,	0	,	}	,
{	1	,	0.52	,	0	,	}	,
{	1	,	0.48	,	0	,	}	,
{	1	,	0.44	,	0	,	}	,
{	1	,	0.4	,	0	,	}	,
{	1	,	0.36	,	0	,	}	,
{	1	,	0.32	,	0	,	}	,
{	1	,	0.28	,	0	,	}	,
{	1	,	0.24	,	0	,	}	,
{	1	,	0.2	,	0	,	}	,
{	1	,	0.16	,	0	,	}	,
{	1	,	0.12	,	0	,	}	,
{	1	,	0.08	,	0	,	}	,
{	1	,	0.04	,	0	,	}	,
{	1	,	0	,	0	,	}	,
{	0.96	,	0	,	0	,	}	,
{	0.92	,	0	,	0	,	}	,
{	0.88	,	0	,	0	,	}	,
{	0.84	,	0	,	0	,	}	,
{	0.8	,	0	,	0	,	}	,
{	0.76	,	0	,	0	,	}	,
{	0.72	,	0	,	0	,	}	,
{	0.68	,	0	,	0	,	}	,
{	0.64	,	0	,	0	,	}	,
{	0.6	,	0	,	0	,	}	,
{	0.56	,	0	,	0	,	}	,
{	0.52	,	0	,	0	,	}	,
};

const float COLOR_MAP_COOL[NUM_COLORS][3] = {
{	0	,	1	,	1	}	,
{	0.0101	,	0.9899	,	1	}	,
{	0.0202	,	0.9798	,	1	}	,
{	0.0303	,	0.9697	,	1	}	,
{	0.0404	,	0.9596	,	1	}	,
{	0.0505	,	0.9495	,	1	}	,
{	0.0606	,	0.9394	,	1	}	,
{	0.0707	,	0.9293	,	1	}	,
{	0.0808	,	0.9192	,	1	}	,
{	0.0909	,	0.9091	,	1	}	,
{	0.101	,	0.899	,	1	}	,
{	0.1111	,	0.8889	,	1	}	,
{	0.1212	,	0.8788	,	1	}	,
{	0.1313	,	0.8687	,	1	}	,
{	0.1414	,	0.8586	,	1	}	,
{	0.1515	,	0.8485	,	1	}	,
{	0.1616	,	0.8384	,	1	}	,
{	0.1717	,	0.8283	,	1	}	,
{	0.1818	,	0.8182	,	1	}	,
{	0.1919	,	0.8081	,	1	}	,
{	0.202	,	0.798	,	1	}	,
{	0.2121	,	0.7879	,	1	}	,
{	0.2222	,	0.7778	,	1	}	,
{	0.2323	,	0.7677	,	1	}	,
{	0.2424	,	0.7576	,	1	}	,
{	0.2525	,	0.7475	,	1	}	,
{	0.2626	,	0.7374	,	1	}	,
{	0.2727	,	0.7273	,	1	}	,
{	0.2828	,	0.7172	,	1	}	,
{	0.2929	,	0.7071	,	1	}	,
{	0.303	,	0.697	,	1	}	,
{	0.3131	,	0.6869	,	1	}	,
{	0.3232	,	0.6768	,	1	}	,
{	0.3333	,	0.6667	,	1	}	,
{	0.3434	,	0.6566	,	1	}	,
{	0.3535	,	0.6465	,	1	}	,
{	0.3636	,	0.6364	,	1	}	,
{	0.3737	,	0.6263	,	1	}	,
{	0.3838	,	0.6162	,	1	}	,
{	0.3939	,	0.6061	,	1	}	,
{	0.404	,	0.596	,	1	}	,
{	0.4141	,	0.5859	,	1	}	,
{	0.4242	,	0.5758	,	1	}	,
{	0.4343	,	0.5657	,	1	}	,
{	0.4444	,	0.5556	,	1	}	,
{	0.4545	,	0.5455	,	1	}	,
{	0.4646	,	0.5354	,	1	}	,
{	0.4747	,	0.5253	,	1	}	,
{	0.4848	,	0.5152	,	1	}	,
{	0.4949	,	0.5051	,	1	}	,
{	0.5051	,	0.4949	,	1	}	,
{	0.5152	,	0.4848	,	1	}	,
{	0.5253	,	0.4747	,	1	}	,
{	0.5354	,	0.4646	,	1	}	,
{	0.5455	,	0.4545	,	1	}	,
{	0.5556	,	0.4444	,	1	}	,
{	0.5657	,	0.4343	,	1	}	,
{	0.5758	,	0.4242	,	1	}	,
{	0.5859	,	0.4141	,	1	}	,
{	0.596	,	0.404	,	1	}	,
{	0.6061	,	0.3939	,	1	}	,
{	0.6162	,	0.3838	,	1	}	,
{	0.6263	,	0.3737	,	1	}	,
{	0.6364	,	0.3636	,	1	}	,
{	0.6465	,	0.3535	,	1	}	,
{	0.6566	,	0.3434	,	1	}	,
{	0.6667	,	0.3333	,	1	}	,
{	0.6768	,	0.3232	,	1	}	,
{	0.6869	,	0.3131	,	1	}	,
{	0.697	,	0.303	,	1	}	,
{	0.7071	,	0.2929	,	1	}	,
{	0.7172	,	0.2828	,	1	}	,
{	0.7273	,	0.2727	,	1	}	,
{	0.7374	,	0.2626	,	1	}	,
{	0.7475	,	0.2525	,	1	}	,
{	0.7576	,	0.2424	,	1	}	,
{	0.7677	,	0.2323	,	1	}	,
{	0.7778	,	0.2222	,	1	}	,
{	0.7879	,	0.2121	,	1	}	,
{	0.798	,	0.202	,	1	}	,
{	0.8081	,	0.1919	,	1	}	,
{	0.8182	,	0.1818	,	1	}	,
{	0.8283	,	0.1717	,	1	}	,
{	0.8384	,	0.1616	,	1	}	,
{	0.8485	,	0.1515	,	1	}	,
{	0.8586	,	0.1414	,	1	}	,
{	0.8687	,	0.1313	,	1	}	,
{	0.8788	,	0.1212	,	1	}	,
{	0.8889	,	0.1111	,	1	}	,
{	0.899	,	0.101	,	1	}	,
{	0.9091	,	0.0909	,	1	}	,
{	0.9192	,	0.0808	,	1	}	,
{	0.9293	,	0.0707	,	1	}	,
{	0.9394	,	0.0606	,	1	}	,
{	0.9495	,	0.0505	,	1	}	,
{	0.9596	,	0.0404	,	1	}	,
{	0.9697	,	0.0303	,	1	}	,
{	0.9798	,	0.0202	,	1	}	,
{	0.9899	,	0.0101	,	1	}	,
{	1	,	0	,	1	}	,
};

const float COLOR_MAP_HOT[NUM_COLORS][3] = {
{	0.027	,	0	,	0	}	,
{	0.0541	,	0	,	0	}	,
{	0.0811	,	0	,	0	}	,
{	0.1081	,	0	,	0	}	,
{	0.1351	,	0	,	0	}	,
{	0.1622	,	0	,	0	}	,
{	0.1892	,	0	,	0	}	,
{	0.2162	,	0	,	0	}	,
{	0.2432	,	0	,	0	}	,
{	0.2703	,	0	,	0	}	,
{	0.2973	,	0	,	0	}	,
{	0.3243	,	0	,	0	}	,
{	0.3514	,	0	,	0	}	,
{	0.3784	,	0	,	0	}	,
{	0.4054	,	0	,	0	}	,
{	0.4324	,	0	,	0	}	,
{	0.4595	,	0	,	0	}	,
{	0.4865	,	0	,	0	}	,
{	0.5135	,	0	,	0	}	,
{	0.5405	,	0	,	0	}	,
{	0.5676	,	0	,	0	}	,
{	0.5946	,	0	,	0	}	,
{	0.6216	,	0	,	0	}	,
{	0.6486	,	0	,	0	}	,
{	0.6757	,	0	,	0	}	,
{	0.7027	,	0	,	0	}	,
{	0.7297	,	0	,	0	}	,
{	0.7568	,	0	,	0	}	,
{	0.7838	,	0	,	0	}	,
{	0.8108	,	0	,	0	}	,
{	0.8378	,	0	,	0	}	,
{	0.8649	,	0	,	0	}	,
{	0.8919	,	0	,	0	}	,
{	0.9189	,	0	,	0	}	,
{	0.9459	,	0	,	0	}	,
{	0.973	,	0	,	0	}	,
{	1	,	0	,	0	}	,
{	1	,	0.027	,	0	}	,
{	1	,	0.0541	,	0	}	,
{	1	,	0.0811	,	0	}	,
{	1	,	0.1081	,	0	}	,
{	1	,	0.1351	,	0	}	,
{	1	,	0.1622	,	0	}	,
{	1	,	0.1892	,	0	}	,
{	1	,	0.2162	,	0	}	,
{	1	,	0.2432	,	0	}	,
{	1	,	0.2703	,	0	}	,
{	1	,	0.2973	,	0	}	,
{	1	,	0.3243	,	0	}	,
{	1	,	0.3514	,	0	}	,
{	1	,	0.3784	,	0	}	,
{	1	,	0.4054	,	0	}	,
{	1	,	0.4324	,	0	}	,
{	1	,	0.4595	,	0	}	,
{	1	,	0.4865	,	0	}	,
{	1	,	0.5135	,	0	}	,
{	1	,	0.5405	,	0	}	,
{	1	,	0.5676	,	0	}	,
{	1	,	0.5946	,	0	}	,
{	1	,	0.6216	,	0	}	,
{	1	,	0.6486	,	0	}	,
{	1	,	0.6757	,	0	}	,
{	1	,	0.7027	,	0	}	,
{	1	,	0.7297	,	0	}	,
{	1	,	0.7568	,	0	}	,
{	1	,	0.7838	,	0	}	,
{	1	,	0.8108	,	0	}	,
{	1	,	0.8378	,	0	}	,
{	1	,	0.8649	,	0	}	,
{	1	,	0.8919	,	0	}	,
{	1	,	0.9189	,	0	}	,
{	1	,	0.9459	,	0	}	,
{	1	,	0.973	,	0	}	,
{	1	,	1	,	0	}	,
{	1	,	1	,	0.0385	}	,
{	1	,	1	,	0.0769	}	,
{	1	,	1	,	0.1154	}	,
{	1	,	1	,	0.1538	}	,
{	1	,	1	,	0.1923	}	,
{	1	,	1	,	0.2308	}	,
{	1	,	1	,	0.2692	}	,
{	1	,	1	,	0.3077	}	,
{	1	,	1	,	0.3462	}	,
{	1	,	1	,	0.3846	}	,
{	1	,	1	,	0.4231	}	,
{	1	,	1	,	0.4615	}	,
{	1	,	1	,	0.5	}	,
{	1	,	1	,	0.5385	}	,
{	1	,	1	,	0.5769	}	,
{	1	,	1	,	0.6154	}	,
{	1	,	1	,	0.6538	}	,
{	1	,	1	,	0.6923	}	,
{	1	,	1	,	0.7308	}	,
{	1	,	1	,	0.7692	}	,
{	1	,	1	,	0.8077	}	,
{	1	,	1	,	0.8462	}	,
{	1	,	1	,	0.8846	}	,
{	1	,	1	,	0.9231	}	,
{	1	,	1	,	0.9615	}	,
{	1	,	1	,	1	}	,
};

const float COLOR_MAP_INVERSE_HOT[NUM_COLORS][3] = {
{	1	,	1	,	1	}	,
{	1	,	1	,	0.9615	}	,
{	1	,	1	,	0.9231	}	,
{	1	,	1	,	0.8846	}	,
{	1	,	1	,	0.8462	}	,
{	1	,	1	,	0.8077	}	,
{	1	,	1	,	0.7692	}	,
{	1	,	1	,	0.7308	}	,
{	1	,	1	,	0.6923	}	,
{	1	,	1	,	0.6538	}	,
{	1	,	1	,	0.6154	}	,
{	1	,	1	,	0.5769	}	,
{	1	,	1	,	0.5385	}	,
{	1	,	1	,	0.5	}	,
{	1	,	1	,	0.4615	}	,
{	1	,	1	,	0.4231	}	,
{	1	,	1	,	0.3846	}	,
{	1	,	1	,	0.3462	}	,
{	1	,	1	,	0.3077	}	,
{	1	,	1	,	0.2692	}	,
{	1	,	1	,	0.2308	}	,
{	1	,	1	,	0.1923	}	,
{	1	,	1	,	0.1538	}	,
{	1	,	1	,	0.1154	}	,
{	1	,	1	,	0.0769	}	,
{	1	,	1	,	0.0385	}	,
{	1	,	1	,	0	}	,
{	1	,	0.973	,	0	}	,
{	1	,	0.9459	,	0	}	,
{	1	,	0.9189	,	0	}	,
{	1	,	0.8919	,	0	}	,
{	1	,	0.8649	,	0	}	,
{	1	,	0.8378	,	0	}	,
{	1	,	0.8108	,	0	}	,
{	1	,	0.7838	,	0	}	,
{	1	,	0.7568	,	0	}	,
{	1	,	0.7297	,	0	}	,
{	1	,	0.7027	,	0	}	,
{	1	,	0.6757	,	0	}	,
{	1	,	0.6486	,	0	}	,
{	1	,	0.6216	,	0	}	,
{	1	,	0.5946	,	0	}	,
{	1	,	0.5676	,	0	}	,
{	1	,	0.5405	,	0	}	,
{	1	,	0.5135	,	0	}	,
{	1	,	0.4865	,	0	}	,
{	1	,	0.4595	,	0	}	,
{	1	,	0.4324	,	0	}	,
{	1	,	0.4054	,	0	}	,
{	1	,	0.3784	,	0	}	,
{	1	,	0.3514	,	0	}	,
{	1	,	0.3243	,	0	}	,
{	1	,	0.2973	,	0	}	,
{	1	,	0.2703	,	0	}	,
{	1	,	0.2432	,	0	}	,
{	1	,	0.2162	,	0	}	,
{	1	,	0.1892	,	0	}	,
{	1	,	0.1622	,	0	}	,
{	1	,	0.1351	,	0	}	,
{	1	,	0.1081	,	0	}	,
{	1	,	0.0811	,	0	}	,
{	1	,	0.0541	,	0	}	,
{	1	,	0.027	,	0	}	,
{	1	,	0	,	0	}	,
{	0.973	,	0	,	0	}	,
{	0.9459	,	0	,	0	}	,
{	0.9189	,	0	,	0	}	,
{	0.8919	,	0	,	0	}	,
{	0.8649	,	0	,	0	}	,
{	0.8378	,	0	,	0	}	,
{	0.8108	,	0	,	0	}	,
{	0.7838	,	0	,	0	}	,
{	0.7568	,	0	,	0	}	,
{	0.7297	,	0	,	0	}	,
{	0.7027	,	0	,	0	}	,
{	0.6757	,	0	,	0	}	,
{	0.6486	,	0	,	0	}	,
{	0.6216	,	0	,	0	}	,
{	0.5946	,	0	,	0	}	,
{	0.5676	,	0	,	0	}	,
{	0.5405	,	0	,	0	}	,
{	0.5135	,	0	,	0	}	,
{	0.4865	,	0	,	0	}	,
{	0.4595	,	0	,	0	}	,
{	0.4324	,	0	,	0	}	,
{	0.4054	,	0	,	0	}	,
{	0.3784	,	0	,	0	}	,
{	0.3514	,	0	,	0	}	,
{	0.3243	,	0	,	0	}	,
{	0.2973	,	0	,	0	}	,
{	0.2703	,	0	,	0	}	,
{	0.2432	,	0	,	0	}	,
{	0.2162	,	0	,	0	}	,
{	0.1892	,	0	,	0	}	,
{	0.1622	,	0	,	0	}	,
{	0.1351	,	0	,	0	}	,
{	0.1081	,	0	,	0	}	,
{	0.0811	,	0	,	0	}	,
{	0.0541	,	0	,	0	}	,
{	0.027	,	0	,	0	}	,
};

const float COLOR_MAP_SUMMER[NUM_COLORS][3] = {
{	0	,	0.5	,	0.4	}	,
{	0.0101	,	0.5051	,	0.4	}	,
{	0.0202	,	0.5101	,	0.4	}	,
{	0.0303	,	0.5152	,	0.4	}	,
{	0.0404	,	0.5202	,	0.4	}	,
{	0.0505	,	0.5253	,	0.4	}	,
{	0.0606	,	0.5303	,	0.4	}	,
{	0.0707	,	0.5354	,	0.4	}	,
{	0.0808	,	0.5404	,	0.4	}	,
{	0.0909	,	0.5455	,	0.4	}	,
{	0.101	,	0.5505	,	0.4	}	,
{	0.1111	,	0.5556	,	0.4	}	,
{	0.1212	,	0.5606	,	0.4	}	,
{	0.1313	,	0.5657	,	0.4	}	,
{	0.1414	,	0.5707	,	0.4	}	,
{	0.1515	,	0.5758	,	0.4	}	,
{	0.1616	,	0.5808	,	0.4	}	,
{	0.1717	,	0.5859	,	0.4	}	,
{	0.1818	,	0.5909	,	0.4	}	,
{	0.1919	,	0.596	,	0.4	}	,
{	0.202	,	0.601	,	0.4	}	,
{	0.2121	,	0.6061	,	0.4	}	,
{	0.2222	,	0.6111	,	0.4	}	,
{	0.2323	,	0.6162	,	0.4	}	,
{	0.2424	,	0.6212	,	0.4	}	,
{	0.2525	,	0.6263	,	0.4	}	,
{	0.2626	,	0.6313	,	0.4	}	,
{	0.2727	,	0.6364	,	0.4	}	,
{	0.2828	,	0.6414	,	0.4	}	,
{	0.2929	,	0.6465	,	0.4	}	,
{	0.303	,	0.6515	,	0.4	}	,
{	0.3131	,	0.6566	,	0.4	}	,
{	0.3232	,	0.6616	,	0.4	}	,
{	0.3333	,	0.6667	,	0.4	}	,
{	0.3434	,	0.6717	,	0.4	}	,
{	0.3535	,	0.6768	,	0.4	}	,
{	0.3636	,	0.6818	,	0.4	}	,
{	0.3737	,	0.6869	,	0.4	}	,
{	0.3838	,	0.6919	,	0.4	}	,
{	0.3939	,	0.697	,	0.4	}	,
{	0.404	,	0.702	,	0.4	}	,
{	0.4141	,	0.7071	,	0.4	}	,
{	0.4242	,	0.7121	,	0.4	}	,
{	0.4343	,	0.7172	,	0.4	}	,
{	0.4444	,	0.7222	,	0.4	}	,
{	0.4545	,	0.7273	,	0.4	}	,
{	0.4646	,	0.7323	,	0.4	}	,
{	0.4747	,	0.7374	,	0.4	}	,
{	0.4848	,	0.7424	,	0.4	}	,
{	0.4949	,	0.7475	,	0.4	}	,
{	0.5051	,	0.7525	,	0.4	}	,
{	0.5152	,	0.7576	,	0.4	}	,
{	0.5253	,	0.7626	,	0.4	}	,
{	0.5354	,	0.7677	,	0.4	}	,
{	0.5455	,	0.7727	,	0.4	}	,
{	0.5556	,	0.7778	,	0.4	}	,
{	0.5657	,	0.7828	,	0.4	}	,
{	0.5758	,	0.7879	,	0.4	}	,
{	0.5859	,	0.7929	,	0.4	}	,
{	0.596	,	0.798	,	0.4	}	,
{	0.6061	,	0.803	,	0.4	}	,
{	0.6162	,	0.8081	,	0.4	}	,
{	0.6263	,	0.8131	,	0.4	}	,
{	0.6364	,	0.8182	,	0.4	}	,
{	0.6465	,	0.8232	,	0.4	}	,
{	0.6566	,	0.8283	,	0.4	}	,
{	0.6667	,	0.8333	,	0.4	}	,
{	0.6768	,	0.8384	,	0.4	}	,
{	0.6869	,	0.8434	,	0.4	}	,
{	0.697	,	0.8485	,	0.4	}	,
{	0.7071	,	0.8535	,	0.4	}	,
{	0.7172	,	0.8586	,	0.4	}	,
{	0.7273	,	0.8636	,	0.4	}	,
{	0.7374	,	0.8687	,	0.4	}	,
{	0.7475	,	0.8737	,	0.4	}	,
{	0.7576	,	0.8788	,	0.4	}	,
{	0.7677	,	0.8838	,	0.4	}	,
{	0.7778	,	0.8889	,	0.4	}	,
{	0.7879	,	0.8939	,	0.4	}	,
{	0.798	,	0.899	,	0.4	}	,
{	0.8081	,	0.904	,	0.4	}	,
{	0.8182	,	0.9091	,	0.4	}	,
{	0.8283	,	0.9141	,	0.4	}	,
{	0.8384	,	0.9192	,	0.4	}	,
{	0.8485	,	0.9242	,	0.4	}	,
{	0.8586	,	0.9293	,	0.4	}	,
{	0.8687	,	0.9343	,	0.4	}	,
{	0.8788	,	0.9394	,	0.4	}	,
{	0.8889	,	0.9444	,	0.4	}	,
{	0.899	,	0.9495	,	0.4	}	,
{	0.9091	,	0.9545	,	0.4	}	,
{	0.9192	,	0.9596	,	0.4	}	,
{	0.9293	,	0.9646	,	0.4	}	,
{	0.9394	,	0.9697	,	0.4	}	,
{	0.9495	,	0.9747	,	0.4	}	,
{	0.9596	,	0.9798	,	0.4	}	,
{	0.9697	,	0.9848	,	0.4	}	,
{	0.9798	,	0.9899	,	0.4	}	,
{	0.9899	,	0.9949	,	0.4	}	,
{	1	,	1	,	0.4	}	,
};

enum ColorType {
	COLOR_JET = 0,
	COLOR_COOL,
	COLOR_HOT,
	COLOR_INVERSE_HOT,
	COLOR_SUMMER,
	NUM_COLOR_TYPES
};

//const float[][3] COLOR_MAPS[] = {COLOR_MAP_JET, COLOR_MAP_COOL, COLOR_MAP_HOT, COLOR_MAP_INVERSE_HOT, COLOR_MAP_SUMMER};
//const float COLOR_MAPS[NUM_COLOR_TYPES] = {COLOR_MAP_JET[0], COLOR_MAP_COOL[0], &COLOR_MAP_HOT[0], COLOR_MAP_INVERSE_HOT[0], COLOR_MAP_SUMMER[0]};


class Color
{
public:
	Color()
		: m_min(0.f), m_max(1.f),
		  m_colorMap(COLOR_MAP_JET)
	{
		m_step = (m_max - m_min) / static_cast<float>(NUM_COLORS);
	}

	Color(const float min, const float max)
		: m_min(min), m_max(max),
		  m_colorMap(COLOR_MAP_JET)
	{
		m_step = (m_max - m_min) / static_cast<float>(NUM_COLORS);
	}

	void setMinMax(const float min, const float max)
	{
		m_min = min;
		m_max = max;
		m_step = (m_max - m_min) / static_cast<float>(NUM_COLORS);
	}

	inline void rgb(const float value, unsigned char &r, unsigned char &g, unsigned char &b)
	{
		int i = index(value);
		r = static_cast<unsigned char>(255.f * m_colorMap[i][0]);
		g = static_cast<unsigned char>(255.f * m_colorMap[i][1]);
		b = static_cast<unsigned char>(255.f * m_colorMap[i][2]);
	}

	//inline void rgb(float &r, float &g, float &b)
	//{
	//}

protected:
	/** @brief	Linear interoplation of the RGB color
	  * @todo	Linear vs. Hyperbolic
	  */
	inline int index(const float value)
	{
		if(value <= m_min) return 0;
		if(value >= m_max) return NUM_COLORS - 1;
		return static_cast<int>((value - m_min) / m_step);
	}

protected:
	float m_min, m_max;
	float m_step;
	const float (&m_colorMap)[NUM_COLORS][3];
};
}

#endif